#!/bin/sh


cheie="5rttnwPJR2TneXp6AOkbhA"

feed_id="38780"
curl -s 'http://api.sen.se/feeds/'$feed_id'/last_event/?sense_key='$cheie -X GET -H "Content-type: application/json" > /ram/cmd_read.txt
cat /wabbit/tmp/cmd_read.txt 
echo "---------------"
cmd_full=$(cat /wabbit/tmp/cmd_read.txt  | sed 's/\"//g' | grep value | awk 'BEGIN { FS = ":" } ; {print $2}' | sed 's/\,//g')
time_new=$(cat /wabbit/tmp/cmd_read.txt  | grep timetag | sed 's/\"//g' | sed 's/ //g' | sed 's/\,//g' | sed 's/\://g' | sed 's/\+//g' | sed 's/\-//g' )
time_old=$(cat /wabbit/tmp/cmd_timetag.txt)

echo $time_new > /wabbit/tmp/cmd_timetag.txt

echo "OLD "$time_old
echo "NEW "$time_new

if [ "$time_new" != "$time_old" ]; then
 echo " new command ! WILL BE EXECUTED. "
else
  echo "old comand" 
  exit 0
fi
# echo "to be printed only if new one in place"
# A new command has been issued, starting interpreter + executing


echo "$cmd_full," >> /wabbit/tmp/logs_cmd_exec.csv


echo ">"$cmd_full"<"

eval=$(echo $cmd_full | grep -c 'speech')
if [ "$eval" -gt 0 ]; then
# speech exec
echo "clean"
text=$(echo $cmd_full | sed 's/speech//g')
echo $text
/usr/bin/espeak -v en -s 100 --stdout "$text" | /usr/bin/aplay

fi

exit 0
